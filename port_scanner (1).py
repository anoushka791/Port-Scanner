# -*- coding: utf-8 -*-
"""port_scanner.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hLv4NZjZD_fgsgcb6XyYkli3vdqpZ9oi
"""

import socket
from concurrent.futures import ThreadPoolExecutor

def scan_port(target_host, port, open_ports):
    try:
        # Create a new socket
        client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        # Set a timeout for the connection attempt to prevent blocking
        client_socket.settimeout(1)
        # Try to connect to the target host and port
        result = client_socket.connect_ex((target_host, port))
        # If the connection is successful (port is open), add it to the open_ports list
        if result == 0:
            open_ports.append(port)
            # Print a message indicating the open port
            print(f"Port {port} is open")
        # Close the socket
        client_socket.close()
    # Handle socket errors or timeouts
    except (socket.error, socket.timeout):
        pass

def scan_ports(target_host, start_port, end_port, max_threads=10):
    # Create an empty list to store the open ports found
    open_ports = []
    # Create a ThreadPoolExecutor with the specified maximum number of threads
    with ThreadPoolExecutor(max_threads) as executor:
        # Generate a range of ports to scan
        port_range = range(start_port, end_port + 1)
        # Submit tasks (scan_port) to the ThreadPoolExecutor for each port in the range
        futures = [executor.submit(scan_port, target_host, port, open_ports) for port in port_range]

        # Wait for all threads to complete by calling .result() on each future
        for future in futures:
            future.result()

    # Return the list of open ports found
    return open_ports

if __name__ == "__main__":
    # Define the target host IP address or hostname to scan
    target_host = "10.50.1.200"
    # Define the range of ports to scan (from start_port to end_port, inclusive)
    start_port = 1
    end_port = 1000

    # Call scan_ports function to perform the port scanning and get the open ports
    open_ports = scan_ports(target_host, start_port, end_port)

    # Print the list of open ports found
    for port in open_ports:
        print(f"Port {port} is open")